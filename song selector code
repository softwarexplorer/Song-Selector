package musicselector;

import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Scanner;

import javax.swing.JOptionPane;

public class musicSelectorv2 {
	static List<String> iTunesTopTen = new ArrayList<String>();

	public void iTunes() {

		iTunesTopTen.add("Good for You\n");
		iTunesTopTen.add("Cheerleader\n");
		iTunesTopTen.add("Fight Song\n");
		iTunesTopTen.add("Bad Blood\n");
		iTunesTopTen.add("Can't Feel My Face\n");
		iTunesTopTen.add("Honey, I'm Good\n");
		iTunesTopTen.add("See You Again\n");
		iTunesTopTen.add("Shut Up and Dance\n");
		iTunesTopTen.add("Lean On\n");
		iTunesTopTen.add("Worth It\n");
		

	}

	static String iTunes = "";

	static List<String> randomSongs = new ArrayList<String>();

	static List<String> seventies = new ArrayList<String>();

	public void seventies() {
		seventies.add("Stairway To Heaven\n");
		seventies.add("I Will Survive\n");
		seventies.add("Play That Funky Music\n");
		seventies.add("Lean On Me\n");
		seventies.add("That's the Way I Like It\n");
		seventies.add("Dream On\n");

	}

	static String seventy = "";

	static List<String> eighties = new ArrayList<String>();

	public void eighties() throws Exception {
		eighties.add("Funkytown\n");
		eighties.add("Sweet Dreams are Made of These\n");
		eighties.add("Tainted Love\n");
		eighties.add("Electric Slide\n");
		eighties.add("Mony Mony\n");
		eighties.add("I Wanna Dance with Somebody\n");
		eighties.add("Wild Thing\n");

	}

	static String eighty = "";

	static List<String> nineties = new ArrayList<String>();

	public void nineties() throws Exception {
		nineties.add("Can't touch this\n");
		nineties.add("This is How We Do It\n");

	}

	static String ninety = "";

	static List<String> twoThousands = new ArrayList<String>();

	public void twoThousand() throws Exception {
		twoThousands.add("I Gotta Feeling\n");
		twoThousands.add("Since you been gone\n");
		twoThousands.add("Single Ladies\n");
		twoThousands.add("Poker Face\n");
		twoThousands.add("Who Let the Dogs Out\n");

	}

	static String twoK = "";

	static ArrayList<String> songlist = new ArrayList<String>();
	static ArrayList<String> suggestions = new ArrayList<String>();
	static String[] list = null;
	static String first, middle, last;

	public void chooseSong(String songs) {
		if (songs.equals("iTunes")) {
			list = new String[iTunesTopTen.size()];
			for (int i = 0; i < iTunesTopTen.size(); i++) {
				list[i] = iTunesTopTen.get(i);
			}
		}

		if (songs.equals("70")) {
			list = new String[seventies.size()];
			for (int i = 0; i < seventies.size(); i++) {
				list[i] = seventies.get(i);
			}

		}
		if (songs.equals("80")) {
			list = new String[eighties.size()];
			for (int i = 0; i < eighties.size(); i++) {
				list[i] = eighties.get(i);
			}

		}
		if (songs.equals("90")) {
			list = new String[nineties.size()];
			for (int i = 0; i < nineties.size(); i++) {
				list[i] = nineties.get(i);
			}

		}
		if (songs.equals("2000")) {
			list = new String[twoThousands.size()];
			for (int i = 0; i < twoThousands.size(); i++) {
				list[i] = twoThousands.get(i);
			}

		}

		String temp = JOptionPane
				.showInputDialog("How many songs would you like to add to your song list? ( enter a number, or 'all' if you wish to add all songs in the list): ");
		if (temp.equalsIgnoreCase("all")) {
			for (int i = 0; i < list.length; i++) {
				songlist.add(list[i]);

			}
			return;
		}
		String answer1 = temp;
		int numberOfSongs = Integer.parseInt(answer1);

		for (int i = 0; i < list.length; i++) {

			if (numberOfSongs < 1 || numberOfSongs > list.length) {

				if ((numberOfSongs < 1 || numberOfSongs > list.length)
						&& i == list.length - 1) {
					temp = JOptionPane
							.showInputDialog("Error! You must enter a number from 1-"
									+ list.length
									+ " \nHow many songs would you like to add to your song list? ( enter a number ): ");
					numberOfSongs = Integer.parseInt(temp);

					i = 0;

				}

				continue;
			}

			break;

		}
		if (numberOfSongs > 1) {
			int counter = 1;
			for (int number = 0; number < numberOfSongs; number++) {
				String songNumber = JOptionPane.showInputDialog("What is song "
						+ counter
						+ ". that you would like to add to your songlist? ");
				int songChoice = Integer.parseInt(songNumber);

				songChoice -= 1;

				while (songChoice < 0 || songChoice > list.length - 1) {
					String songWant = JOptionPane
							.showInputDialog("Error, you must enter a number from 1 - "
									+ list.length
									+ " \n"
									+ "Please try again.\n"
									+ "What is song "
									+ counter
									+ ". that you would like to add to your songlist? ");
					songChoice = Integer.parseInt(songWant);

					songChoice -= 1;

				}
				for (int i = 0; i < songlist.size(); i++) {
					if (songlist.get(i) == list[songChoice]) {
						songNumber = JOptionPane
								.showInputDialog("You have already choosen this number, please choose a different number: ");
						songChoice = Integer.parseInt(songNumber);
						songChoice -= 1;
						while (songChoice < 0 || songChoice > list.length - 1) {
							String songWant = JOptionPane
									.showInputDialog("Error, you must enter a number from 1 - "
											+ list.length
											+ " \n"
											+ "Please try again.\n"
											+ "What is song "
											+ counter
											+ ". that you would like to add to your songlist? ");
							songChoice = Integer.parseInt(songWant);

							songChoice -= 1;

						}
					}
					continue;
				}
				songlist.add(list[songChoice]);
				counter++;
			}

		} else {
			String songNumber = JOptionPane
					.showInputDialog("What is the number of the song that you would like to add to your songlist? ");
			int songChoice = Integer.parseInt(songNumber);

			songChoice -= 1;
			for (int i = 0; i < songlist.size(); i++) {
				if (songlist.get(i) == list[songChoice]) {
					songNumber = JOptionPane
							.showInputDialog("You have already choosen this number, please choose a different number: ");
					songChoice = Integer.parseInt(songNumber);
					songChoice -= 1;
					while (songChoice < 0 || songChoice > list.length - 1) {
						String songWant = JOptionPane
								.showInputDialog("Error, you must enter a number from 1 - "
										+ list.length
										+ " \n"
										+ "Please try again.\n"
										+ "What song "
										+ " would you like to add to your songlist? ");
						songChoice = Integer.parseInt(songWant);

						songChoice -= 1;
					}
				}
				continue;
			}
			songlist.add(list[songChoice]);

		}

	}

	public void noAddMore() {

		JOptionPane.showInputDialog("Ok, lets move on.");

	}

	public String firstName() {
		String first = JOptionPane
				.showInputDialog("Please enter your first name: ");
		while (first.equals("")) {
			first = JOptionPane
					.showInputDialog("Error, please enter your first name: ");
		}
		String firstName = first.substring(0, 1).toUpperCase();
		firstName += first.substring(1).toLowerCase();
		firstName += "'s ";
		return firstName;
	}

	public String middleInitial() {
		String middle = JOptionPane
				.showInputDialog("Thank you, please enter your middle initial: ");
		while (middle.equals("")) {
			middle = JOptionPane
					.showInputDialog("Error, please enter your middle initial: ");
		}
		String middleInitial = middle.toUpperCase();
		middleInitial += ". ";
		return middleInitial;
	}

	public String lastName() {

		String last = JOptionPane
				.showInputDialog("Thank you again, please enter your last name: ");
		while (last.equals("")) {
			last = JOptionPane
					.showInputDialog("Error, please enter your last name: ");
		}
		String lastName = last.substring(0, 1).toUpperCase();
		lastName += last.substring(1).toLowerCase();
		return lastName;
	}

	public void displyUserList() {
		System.out
		.print("_____________________________________________________________\n");
		System.out.println(first + " songlist:");
		int index = 1;
		for (int i = 0; i < songlist.size(); i++) {
			System.out.print(index + ". " + songlist.get(i));
			index++;
		}
		System.out
		.print("_____________________________________________________________\n");
	}

	public void emailMessage() {
		java.io.File file = new java.io.File(first + " Songlist.txt");
		int fileSize = (int) (file.length());
		String fileSizeName = "";
		int count = 0;
		if (fileSize > 1024) {
			fileSize = fileSize / 1024;
			count++;
		}
		if (count == 0) {
			fileSizeName = "Kilobytes";
		}
		if (count == 1) {
			fileSizeName = "Megabytes";
		}
		String emailAnswer = JOptionPane
				.showInputDialog("Would you like to have your list emailed to you?");
		if (emailAnswer.equalsIgnoreCase("y")) {
			String userEmail = JOptionPane
					.showInputDialog("What is your email address?");

			String answer = JOptionPane
					.showInputDialog("\t\t\tNew Message\n\n\n\n"
							+ " To: Audio Engineering <aes-l@mtu.edu>\n"
							+ " --------------------------------------\n"
							+ " Cc:                                  \n"
							+ " --------------------------------------\n"
							+ " Subject:                             \n"
							+ " --------------------------------------\n"
							+ " From: " + first + " " + middle + ". " + last
							+ " - " + first.substring(0, 1).toLowerCase()
							+ middle.substring(0, 1).toLowerCase()
							+ last.toLowerCase() + "@mtu.edu  \n"
							+ " --------------------------------------\n" + " "
							+ first + " Songlist.txt - " + fileSize
							+ fileSizeName
							+ "\t\t\t\t\t\tWould you like to send the email?\n");
			if (!answer.equalsIgnoreCase("yes")
					&& !answer.equalsIgnoreCase("no")
					&& !answer.equalsIgnoreCase("y")
					&& !answer.equalsIgnoreCase("n")) {
				answer = JOptionPane
						.showInputDialog("Error, You must Enter 'yes, 'no', 'y', or 'n'.\nWould you like to send the email? ");

			}
			if (answer.equalsIgnoreCase("y") || answer.equalsIgnoreCase("yes")) {
				JOptionPane.showInputDialog("Email Sent! ( Press ENTER )");
			} else if (answer.equalsIgnoreCase("n")
					|| answer.equalsIgnoreCase("no")) {
				JOptionPane
				.showInputDialog("Ok email was not send ( Press ENTER )");

			}
		}

	}

	public void extraSongsByUser() {

		int extraSongNumber = 0;
		String extraSong = JOptionPane
				.showInputDialog("How many songs would you like to add?");
		extraSongNumber = Integer.parseInt(extraSong);
		for (int i = 0; i < extraSongNumber; i++) {
			extraSong = JOptionPane
					.showInputDialog("What is the title of song #" + (i + 1)
							+ " that you would like to add?");
			String tempS = (extraSong.substring(0, 1).toUpperCase()
					+ extraSong.substring(1) + "\n");
			songlist.add(tempS);
		}
	}

	public void removeSongs() {
		String answer = JOptionPane
				.showInputDialog("Let's polish your list up a bit.\nAre there any songs you wish to remove from"
						+ "your list?");
		if (answer.equalsIgnoreCase("y")) {
			String numberRemoving = JOptionPane
					.showInputDialog("How many songs need to be removed?");
			int removing = Integer.parseInt(numberRemoving);
			for (int i = 0; i < removing; i++) {
				int temp = Integer
						.parseInt(JOptionPane
								.showInputDialog("What is song "
										+ (i + 1)
										+ " that needs to be removed? (Enter a number 1-"
										+ songlist.size() + ")"));
				songlist.remove(temp - 1);

				if (i == removing - 1) {
					JOptionPane
					.showInputDialog("All set! This is your new list: ");
					displyUserList();
				}

			}

		} else if (answer.equalsIgnoreCase("n")) {
			JOptionPane
			.showInputDialog("Alrighty then, it seems that your song list is nice and tidy. Press ENTER");

		}
	}

	public static void main(String[] args) throws Exception {
		musicSelectorv2 self = new musicSelectorv2();
		self.iTunes();
		System.out.println("Going Well so Far, iTunes method completed.");
		self.seventies();
		System.out.println("Going Well so Far, seventies method completed.");
		self.eighties();
		System.out.println("Going Well so Far, eighties method completed.");
		self.nineties();
		System.out.println("Going Well so Far, nineties method completed.");
		self.twoThousand();
		System.out.println("Going Well so Far, twoThousands method completed.");
		// self.checkForDuplicates();

		JOptionPane
		.showInputDialog("Welcome to the Michigan Tech Winter Carnival Music Selector!\nLet's get started (press ENTER)");

		first = self.firstName();

		middle = self.middleInitial();

		last = self.lastName();

		String answer = "";
		for (int i = 1; i <= 6; i++) {
			if (i == 1) {
				JOptionPane
				.showInputDialog("Coming up is the list of songs that were in the top 10 on iTunes hottest songs (press ENTER to view): \n");
				answer = self.display("iTunes");

				String correctInput = self.errorYesOrNo(answer);

				String result = self.likeList(correctInput);
				if (result.equals("yes") || result.equalsIgnoreCase("y")) {
					self.chooseSong("iTunes");
				} else {
					self.likeList(result);
				}
				self.displyUserList();
			}
			if (i == 2) {
				JOptionPane
				.showInputDialog("Coming up is the list of songs that were from the 70's (press ENTER to view): \n");
				answer = self.display("70");

				String correctInput = self.errorYesOrNo(answer);

				String result = self.likeList(correctInput);
				if (result.equals("yes") || result.equalsIgnoreCase("y")) {
					self.chooseSong("70");
				} else {
					self.likeList(result);
				}
				self.displyUserList();
			}
			if (i == 3) {
				JOptionPane
				.showInputDialog("Coming up is the list of songs that were from the 80's (press ENTER to view): \n");
				answer = self.display("80");

				String correctInput = self.errorYesOrNo(answer);

				String result = self.likeList(correctInput);
				if (result.equals("yes") || result.equalsIgnoreCase("y")) {
					self.chooseSong("80");
				} else {
					self.likeList(result);
				}
				self.displyUserList();
			}
			if (i == 4) {
				JOptionPane
				.showInputDialog("Coming up is the list of songs that were from the 90's (press ENTER to view): \n");
				answer = self.display("90");

				String correctInput = self.errorYesOrNo(answer);

				String result = self.likeList(correctInput);
				if (result.equals("yes") || result.equalsIgnoreCase("y")) {
					self.chooseSong("90");
				} else {
					self.likeList(result);
				}
				self.displyUserList();
			}
			if (i == 5) {
				JOptionPane
				.showInputDialog("Coming up is the list of songs that were from the 2000's (press ENTER to view): \n");
				answer = self.display("2000");

				String correctInput = self.errorYesOrNo(answer);

				String result = self.likeList(correctInput);
				if (result.equals("yes") || result.equalsIgnoreCase("y")) {
					self.chooseSong("2000");
				} else {
					self.likeList(result);
				}
				self.displyUserList();
			}
			if (i == 6) {
				String more = JOptionPane
						.showInputDialog("Alrighty, you have gone through songs that we from the 70's - 2000's.\n "
								+ "Are there and other songs that weren't in the previous music lists that you would like to add to your songlist? ");
				String correctInput = self.errorYesOrNo(more);

				if (correctInput.equals("yes")
						|| correctInput.equalsIgnoreCase("y")) {
					self.extraSongsByUser();
				} else {
					self.noAddMore();
				}
				JOptionPane
				.showInputDialog("Your custom list will be coming up on the left ( <= ) Press ENTER:\n");
				System.out.println();
				self.displyUserList();
			}

		}
		self.removeSongs();
		self.emailMessage();
	}

	public String errorYesOrNo(String answer) {
		String input = "";
		while (!answer.equalsIgnoreCase("yes")
				&& !answer.equalsIgnoreCase("no")
				&& !answer.equalsIgnoreCase("y")
				&& !answer.equalsIgnoreCase("n")) {
			answer = JOptionPane
					.showInputDialog("Error, you must enter 'yes', 'no', 'y', or 'n' "
							+ "\nPlease try again, do you like any of the of songs in the list to the left?: ");
		}
		input = answer;

		return input;
	}

	public String likeList(String answer) {
		if (answer.equalsIgnoreCase("yes") || answer.equalsIgnoreCase("y")) {
			return answer;
		}
		if (answer.equalsIgnoreCase("no") || answer.equalsIgnoreCase("n")) {
			JOptionPane
			.showInputDialog("That's alright not everyone likes these songs.\nLet's move on.(Press ENTER key)");

		}
		return "no";
	}

	public String display(String string) {

		if (string.equals("iTunes")) {
			list = new String[iTunesTopTen.size()];
			System.out.println("iTunes Top Ten: ");
			for (int i = 0; i < iTunesTopTen.size(); i++) {
				list[i] = iTunesTopTen.get(i);
			}
		}

		if (string.equals("70")) {
			list = new String[seventies.size()];
			System.out.println("70's: ");
			for (int i = 0; i < seventies.size(); i++) {
				list[i] = seventies.get(i);
			}

		}
		if (string.equals("80")) {
			list = new String[eighties.size()];
			System.out.println("80's:");
			for (int i = 0; i < eighties.size(); i++) {
				list[i] = eighties.get(i);
			}

		}
		if (string.equals("90")) {
			list = new String[nineties.size()];
			System.out.println("90's:");
			for (int i = 0; i < nineties.size(); i++) {
				list[i] = nineties.get(i);
			}

		}
		if (string.equals("2000")) {
			list = new String[twoThousands.size()];
			System.out.println("2000's:");
			for (int i = 0; i < twoThousands.size(); i++) {
				list[i] = twoThousands.get(i);
			}

		}

		int l = 1;
		if (list.length > 9) {

			for (int i = 0; i < list.length; i++) {

				if (i < 9) {
					System.out.print(l + ".  " + list[i]);
					l++;
				} else {
					System.out.print(l + ". " + list[i]);

					l++;
				}
			}
		} else {
			for (int i = 0; i < list.length; i++) {
				System.out.print(l + ". " + list[i]);

				l++;
			}
		}
		String answer = JOptionPane
				.showInputDialog("\nThe songs are on the left. <= \nDo you like any of these songs? (Enter 'yes', 'y', 'no', or 'n'): ");

		return answer;
	}
}
// hard-code all songs into each array
// create a random song list and remove each song from the specific array as
// song is added to random song array.
// display songs from the array
// figure out how to display the songs in sections of too big .
// add method for user to input suggestions to make program better
